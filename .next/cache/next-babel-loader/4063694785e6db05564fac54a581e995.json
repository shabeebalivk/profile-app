{"ast":null,"code":"var _jsxFileName = \"/home/enzyme/Desktop/react/profile-app-send (1)/components/Index/ProfileList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card } from 'semantic-ui-react';\n\nfunction ProfileList(_ref) {\n  var profiles = _ref.profiles;\n\n  function mapProfilesToItems(profiles) {\n    return profiles.map(function (data) {\n      return {\n        header: data.name,\n        image: data.mediaUrl,\n        color: 'teal',\n        meta: data.age,\n        fluid: true,\n        childkey: data._id,\n        href: \"/profile?_id=\".concat(data._id)\n      };\n    });\n  }\n\n  return __jsx(Card.Group, {\n    stackable: true,\n    itemsPerRow: \"3\",\n    centered: true,\n    items: mapProfilesToItems(profiles),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  });\n}\n\n_c = ProfileList;\nexport default ProfileList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileList\");","map":{"version":3,"sources":["/home/enzyme/Desktop/react/profile-app-send (1)/components/Index/ProfileList.js"],"names":["Card","ProfileList","profiles","mapProfilesToItems","map","data","header","name","image","mediaUrl","color","meta","age","fluid","childkey","_id","href"],"mappings":";;;AAAA,SAASA,IAAT,QAAsB,mBAAtB;;AAEA,SAASC,WAAT,OAAkC;AAAA,MAAXC,QAAW,QAAXA,QAAW;;AAEhC,WAASC,kBAAT,CAA4BD,QAA5B,EAAqC;AACnC,WAAOA,QAAQ,CAACE,GAAT,CAAa,UAAAC,IAAI;AAAA,aAAG;AACzBC,QAAAA,MAAM,EAAED,IAAI,CAACE,IADY;AAEzBC,QAAAA,KAAK,EAAEH,IAAI,CAACI,QAFa;AAGzBC,QAAAA,KAAK,EAAE,MAHkB;AAIzBC,QAAAA,IAAI,EAAEN,IAAI,CAACO,GAJc;AAKzBC,QAAAA,KAAK,EAAE,IALkB;AAMzBC,QAAAA,QAAQ,EAAET,IAAI,CAACU,GANU;AAOzBC,QAAAA,IAAI,yBAAiBX,IAAI,CAACU,GAAtB;AAPqB,OAAH;AAAA,KAAjB,CAAP;AASD;;AACD,SAAO,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,MAArB;AAAsB,IAAA,WAAW,EAAC,GAAlC;AAAsC,IAAA,QAAQ,MAA9C;AAA+C,IAAA,KAAK,EAAEZ,kBAAkB,CAACD,QAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;KAdQD,W;AAgBT,eAAeA,WAAf","sourcesContent":["import { Card, } from 'semantic-ui-react'\n\nfunction ProfileList({ profiles}) {\n\n  function mapProfilesToItems(profiles){\n    return profiles.map(data=>({\n      header: data.name,\n      image: data.mediaUrl,\n      color: 'teal',\n      meta: data.age,\n      fluid: true,\n      childkey: data._id,\n      href:`/profile?_id=${data._id}`\n    }))\n  }\n  return <Card.Group stackable itemsPerRow=\"3\" centered items={mapProfilesToItems(profiles)}/>\n}\n\nexport default ProfileList;\n"]},"metadata":{},"sourceType":"module"}